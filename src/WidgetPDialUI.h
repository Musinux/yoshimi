// WidgetPDial.h
// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef WidgetPDialUI_h
#define WidgetPDialUI_h
#include <FL/Fl.H>

// Original ZynAddSubFX author Nasca Octavian Paul
// Copyright (C) 2002-2005 Nasca Octavian Paul
// Copyright 2009-2010, Alan Calvert

// This file is part of yoshimi, which is free software: you can redistribute
// it and/or modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.

// yoshimi is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.   See the GNU General Public License (version 2 or
// later) for more details.

// You should have received a copy of the GNU General Public License along with
// yoshimi; if not, write to the Free Software Foundation, Inc., 51 Franklin
// Street, Fifth Floor, Boston, MA  02110-1301, USA.

// This file is a derivative of the ZynAddSubFX original, modified October 2010

#include <FL/Fl_Dial.H>
    #include <FL/Fl_Menu_Window.H>
    #include "Misc/MiscFuncs.h"
    #include "Params/ControllableByMIDI.h"
    #include "Misc/ControllableByMIDIUI.h"
    #include "Misc/SynthEngine.h"
    #include <iostream>

class TipWin : public Fl_Menu_Window, MiscFuncs {
public:
  TipWin();
  void draw();
  void value(float f);
  void setText(string c);
  void setTextmode();
private:
  string tip; 
  bool textmode; 
  string text; 
};

class WidgetPDial : public Fl_Dial {
public:
  WidgetPDial(int x,int y, int w, int h, const char *label=0);
  ~WidgetPDial();
  void callback(Fl_Callback* cb);
  int handle(int event);
  void drawgradient(int cx,int cy,int sx,double m1,double m2);
  void draw();
  void pdialcolor(int r,int g,int b);
  void value_cb2();
  static void value_cb(Fl_Widget*, void*data);
  void tooltip(const char * c);
  static void reset(Fl_Widget* w, void* v);
  SynthEngine * getSynth();
  void setSynth(SynthEngine *_synth);
using Fl_Widget::callback;
private:
  bool textset; 
  bool pos; 
  double oldvalue; 
  TipWin *tipwin; 
public:
  ControllableByMIDI *midiCtrl; 
  ControllableByMIDIUI *ui; 
  int par; 
  SynthEngine *synth; 
  bool controllable; 
  static void stampa(Fl_Widget *w, void *v);
};
#endif
