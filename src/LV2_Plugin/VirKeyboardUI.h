// VirKeyboard.h
// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef VirKeyboardUI_h
#define VirKeyboardUI_h
#include <FL/Fl.H>

// Original ZynAddSubFX author Nasca Octavian Paul
// Copyright (C) 2002-2005 Nasca Octavian Paul
// Copyright 2009-2010, Alan Calvert
// Copyright 2014, Will Godfrey    

// This file is part of yoshimi, which is free software: you can redistribute
// it and/or modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.

// yoshimi is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.   See the GNU General Public License (version 2 or
// later) for more details.

// You should have received a copy of the GNU General Public License along with
// yoshimi; if not, write to the Free Software Foundation, Inc., 51 Franklin
// Street, Fifth Floor, Boston, MA  02110-1301, USA.

// This file is a derivative of origional ZynAddSubFX code, modified June 2014

#include <stdlib.h>
#include <FL/fl_draw.H>
#include <FL/Fl_Box.H>
#include "Misc/Config.h"
#include "Misc/SynthEngine.h"
#include "MusicIO/MidiControl.h"
#include "WidgetPDialUI.h"

class VirKeys : public Fl_Box {
  static const int N_OCT = 6; 
  static const int SIZE_WHITE = 14; 
  static const int SIZE_BLACK = 8; 
public:
  VirKeys(int x,int y, int w, int h, const char *label=0);
  void init(SynthEngine *_synth);
  void draw();
  int handle(int event);
  void presskey(int nk,int exclusive,int type);
  void relasekey(int nk,int type);
  void relaseallkeys(int type);
private:
  int pressed[N_OCT * 12 + 1]; 
public:
  unsigned char midich; 
  unsigned char midivel; 
  char midioct, keyoct1, keyoct2; 
  unsigned char rndvelocity; 
private:
  SynthEngine *synth; 
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Roller.H>
#include <FL/Fl_Spinner.H>

class VirKeyboard {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *virkeyboardwindow;
private:
  inline void cb_virkeyboardwindow_i(Fl_Double_Window*, void*);
  static void cb_virkeyboardwindow(Fl_Double_Window*, void*);
public:
  VirKeys *virkeys;
private:
  inline void cb_qwer_i(Fl_Counter*, void*);
  static void cb_qwer(Fl_Counter*, void*);
  inline void cb_zxcv_i(Fl_Counter*, void*);
  static void cb_zxcv(Fl_Counter*, void*);
  inline void cb_Velocity_i(Fl_Value_Slider*, void*);
  static void cb_Velocity(Fl_Value_Slider*, void*);
  inline void cb_Octave_i(Fl_Counter*, void*);
  static void cb_Octave(Fl_Counter*, void*);
  inline void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
  inline void cb_Cval_i(Fl_Value_Slider*, void*);
  static void cb_Cval(Fl_Value_Slider*, void*);
  inline void cb_Controller_i(Fl_Choice*, void*);
  static void cb_Controller(Fl_Choice*, void*);
  static Fl_Menu_Item menu_Controller[];
public:
  Fl_Roller *pitchwheelroller;
private:
  inline void cb_pitchwheelroller_i(Fl_Roller*, void*);
  static void cb_pitchwheelroller(Fl_Roller*, void*);
  inline void cb_R_i(Fl_Button*, void*);
  static void cb_R(Fl_Button*, void*);
  inline void cb_Vrnd_i(WidgetPDial*, void*);
  static void cb_Vrnd(WidgetPDial*, void*);
public:
  Fl_Spinner *midichannel;
private:
  inline void cb_midichannel_i(Fl_Spinner*, void*);
  static void cb_midichannel(Fl_Spinner*, void*);
public:
  VirKeyboard(SynthEngine *_synth);
  ~VirKeyboard();
  void Show();
  void Hide();
  void relaseallkeys();
private:
  int midictl; 
  SynthEngine *synth; 
  std::string keyboardlabel; 
};
#endif
