// Copyright 2011, Alan Calvert

// This file is part of yoshimi, which is free software: you can
// redistribute it and/or modify it under the terms of the GNU General
// Public License as published by the Free Software Foundation, either
// version 2 of the License, or (at your option) any later version.

// yoshimi is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with yoshimi.  If not, see <http://www.gnu.org/licenses/>.

// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "/home/louis/Documents/prog/Yoshimi/github/yoshimi/src/ConsoleUI.h"
#include "Misc/Config.h"
#include "MasterUI.h"

void ConsoleUI::cb_logConsole_i(Fl_Double_Window* o, void*) {
  o->hide();
}
void ConsoleUI::cb_logConsole(Fl_Double_Window* o, void* v) {
  ((ConsoleUI*)(o->user_data()))->cb_logConsole_i(o,v);
}

Fl_Double_Window* ConsoleUI::make_window(void) {
  { logConsole = new Fl_Double_Window(385, 185, "yoshimi console");
    logConsole->color(FL_LIGHT3);
    logConsole->selection_color((Fl_Color)36);
    logConsole->labelfont(13);
    logConsole->labelsize(13);
    logConsole->callback((Fl_Callback*)cb_logConsole, (void*)(this));
    logConsole->align(Fl_Align(FL_ALIGN_CENTER));
    logConsole->when(FL_WHEN_CHANGED);
    { logText = new Fl_Text_Display(0, 0, 385, 185, "log text");
      logText->color(FL_LIGHT3);
      logText->labeltype(FL_NO_LABEL);
      logText->labelfont(13);
      logText->labelsize(13);
      logText->textfont(13);
      logText->textsize(12);
      logText->textcolor((Fl_Color)35);
      logText->when(FL_WHEN_CHANGED);
    } // Fl_Text_Display* logText
    logConsole->end();
    logConsole->resizable(logConsole);
  } // Fl_Double_Window* logConsole
  return logConsole;
}

ConsoleUI::ConsoleUI() {
  make_window();
        txtbuf = new Fl_Text_Buffer(8192);
        logText->buffer(txtbuf);
        logConsole->copy_label(string("yoshimi console").c_str());
}

void ConsoleUI::Show() {
  logConsole->show();
}

void ConsoleUI::Hide() {
  logConsole->hide();
}

ConsoleUI::~ConsoleUI() {
  logConsole->hide();
        if (NULL != txtbuf)
          delete txtbuf;
}

void ConsoleUI::log(string msg) {
  txtbuf->append(msg.c_str());
        txtbuf->append(string("\n").c_str());
        logConsole->redraw();
        if (txtbuf->length() > 8000)
          txtbuf->remove(0, txtbuf->line_end(1));
}

void ConsoleUI::setLabel(const char *_label) {
  logConsole->copy_label((string(_label)
                                + string(" reports")).c_str());
}
